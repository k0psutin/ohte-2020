User Input->User Input: Waiting input
GameState->GameState: mainmenu_view.update()
activate GameState
User Input->GameState: click 'Continue Game'
GameState->GameState: continue_game()
GameState->GameManager: continue_game()
activate GameManager
GameManager->GameManager: reset_game()
GameManager-->GameManager: current_bet = 1
GameManager-->GameManager: current_win = 0
GameManager-->GameManager: deal_active = False
GameManager-->GameManager: game_active == False
GameManager-->GameManager: double_active = False
GameManager-->GameManager: game_over = False
GameManager-->GameManager: bad_guess = False
GameManager-->GameManager: player_win = False
GameManager-->GameManager: card_on_hold = [False, False, False, False, False]
deactivate GameManager
GameManager->*Player: player = player.load_player()
activate Player
Player->PlayerRepository: player_repository.load()
activate PlayerRepository
deactivate Player
PlayerRepository-->Player: save_data
deactivate PlayerRepository
activate Player
Player-->Player: set save_data 
deactivate Player
Player-->GameManager: player
GameManager-->GameState:
GameState-->GameState: state is 'play'
GameState->GameState: play_view.update()
GameState-->User Input:
User Input->User Input: Waiting input